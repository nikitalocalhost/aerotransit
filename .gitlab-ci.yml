test:
    image: elixir:latest

    # Pick zero or more services to be used on all builds.
    # Only needed when using a docker container to run your tests in.
    # Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
    services:
        - postgres:latest

    variables:
        POSTGRES_DB: $POSTGRES_DB
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        POSTGRES_HOST_AUTH_METHOD: trust

    before_script:
        - mix local.rebar --force
        - mix local.hex --force
        - mix deps.get
        - DATABASE_URL=ecto://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost/$POSTGRES_DB

    script:
        - mix test

docker-build:
    image: docker:latest
    stage: build
    services:
        - docker:dind
    before_script:
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # Default branch leaves tag empty (= latest tag)
    # All other branches are tagged with the escaped branch name (commit ref slug)
    script:
        - |
            if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
              tag=""
              echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
            else
              tag=":$CI_COMMIT_REF_SLUG"
              echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
            fi
        - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
        - docker push "$CI_REGISTRY_IMAGE${tag}"
    # Run this job in a branch where a Dockerfile exists
    rules:
        - if: $CI_COMMIT_BRANCH
          exists:
              - Dockerfile
